# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
    push:
        branches-ignore:
            - master

jobs:
    run-tests:
        strategy:
            matrix:
                node-version: [14.x, 16.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
                os: [ubuntu-latest, windows-latest]

        runs-on: ${{matrix.os}}

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm ci
            - name: run test
              run: npm test
              if: always()
            # - run: npm test js2
            #   if: always()
            # - run: npm test js3
            #   if: always()
            # - run: npm test js4
            #   if: always()
            # - run: npm test js5
            #   if: always()
            # - run: npm test js6
            #   if: always()
            # - run: npm test js7
            #   if: always()
            # - run: npm test js8
            #   if: always()
            # - run: npm test js9
            #   if: always()
            # - run: npm test js10
            #   if: always()
            # - run: npm test js11
              # if: always()


            # - name: Test Report
            #   uses: actions/upload-artifact@v3
            #   if: always()    # run this step even if previous step failed
            #   with:
            #     name: JEST Tests            # Name of the check run which will be created
            #     path: reports/jest-*.xml    # Path to test results
                # reporter: jest-junit        # Format of test results


            # - name: Create test summary
            #   uses: ./bin
            #   with:
            #     paths: reports/*.xml
            #     output: reports/results.html
            # - name: Upload test summary
            #   uses: actions/upload-artifact@v3
            #   with:
            #     name: test-summary
            #     path: reports/results.html
            - uses: phoenix-actions/test-reporting@v8
              # always run, otherwise you'll only see results for passing builds
              if: ${{ always() }}
              with:
                name: JEST Tests            # Name of the check run which will be created
                path: reports/jest-*.xml    # Path to test results
                reporter: jest-junit        # Format of test results

            - name: Read output variables
              run: |
                echo "url is ${{ steps.test-report.outputs.runHtmlUrl }}"