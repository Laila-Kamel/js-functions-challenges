{"numFailedTestSuites":7,"numFailedTests":9,"numPassedTestSuites":4,"numPassedTests":77,"numPendingTestSuites":0,"numPendingTests":85,"numRuntimeErrorTestSuites":5,"numTodoTests":0,"numTotalTestSuites":11,"numTotalTests":171,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1662017465582,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1662017483221,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:175:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:304:17\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:260:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.Typed.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:258:23)\u001b[22m\n","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js11-unit-testing\\challenge.test.js","startTime":1662017483221,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"Should return correct string","location":null,"status":"passed","title":"Should return correct string"},{"ancestorTitles":[],"failureMessages":[],"fullName":"Should add two numbers together","location":null,"status":"passed","title":"Should add two numbers together"},{"ancestorTitles":[],"failureMessages":[],"fullName":"Should return string based on which number is larger","location":null,"status":"passed","title":"Should return string based on which number is larger"},{"ancestorTitles":[],"failureMessages":[],"fullName":"Should return new array of names based on length","location":null,"status":"passed","title":"Should return new array of names based on length"},{"ancestorTitles":[],"failureMessages":[],"fullName":"Should reduce all numbers correctly","location":null,"status":"passed","title":"Should reduce all numbers correctly"}],"endTime":1662017482814,"message":"","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js11-unit-testing\\solution.test.js","startTime":1662017476452,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1662017483221,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: cd is not defined\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 | \u001b[39mcd \u001b[90m/* JS5 builds on the previous challenges and adds the use of MORE Array iterators, Arrays, For Loops, Conditionals (If, else, switch)\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m   | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 2 | \u001b[39m\u001b[90m *  & calling your own functions.\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 3 | \u001b[39m\u001b[90m */\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 4 | \u001b[39m\u001b[0m\n\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/js5-arrays-iterators-part-2/challenge.js\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/js5-arrays-iterators-part-2/js5.test.js\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js5-arrays-iterators-part-2\\js5.test.js","startTime":1662017483221,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"createFullName() tests","location":null,"status":"passed","title":"createFullName() tests"},{"ancestorTitles":[],"failureMessages":[],"fullName":"findLargestNumber() tests","location":null,"status":"passed","title":"findLargestNumber() tests"},{"ancestorTitles":[],"failureMessages":[],"fullName":"addNumbers() tests","location":null,"status":"passed","title":"addNumbers() tests"},{"ancestorTitles":[],"failureMessages":[],"fullName":"findLengthOfPassword() tests","location":null,"status":"passed","title":"findLengthOfPassword() tests"},{"ancestorTitles":[],"failureMessages":[],"fullName":"findType() tests","location":null,"status":"passed","title":"findType() tests"},{"ancestorTitles":[],"failureMessages":[],"fullName":"getIsValidOnNameTag() tests","location":null,"status":"passed","title":"getIsValidOnNameTag() tests"},{"ancestorTitles":[],"failureMessages":[],"fullName":"convertStringToNumber() tests","location":null,"status":"passed","title":"convertStringToNumber() tests"},{"ancestorTitles":[],"failureMessages":[],"fullName":"getHasUppercaseLetters() tests","location":null,"status":"passed","title":"getHasUppercaseLetters() tests"},{"ancestorTitles":[],"failureMessages":[],"fullName":"convertPascalCaseToSnakeCase() tests","location":null,"status":"passed","title":"convertPascalCaseToSnakeCase() tests"}],"endTime":1662017482840,"message":"","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js1-types-and-control-flow\\js1.test.js","startTime":1662017476454,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["getFurniturePrice() tests"],"failureMessages":[],"fullName":"getFurniturePrice() tests Should return the correct price","location":null,"status":"passed","title":"Should return the correct price"},{"ancestorTitles":["addFurnitureStorLocation() tests"],"failureMessages":[],"fullName":"addFurnitureStorLocation() tests Should return an object","location":null,"status":"passed","title":"Should return an object"},{"ancestorTitles":["addFurnitureStorLocation() tests"],"failureMessages":[],"fullName":"addFurnitureStorLocation() tests Should add a property of location","location":null,"status":"passed","title":"Should add a property of location"},{"ancestorTitles":["addFurnitureStorLocation() tests"],"failureMessages":[],"fullName":"addFurnitureStorLocation() tests Should still have all of the old properties","location":null,"status":"passed","title":"Should still have all of the old properties"},{"ancestorTitles":["addFurnitureStorLocation() tests"],"failureMessages":[],"fullName":"addFurnitureStorLocation() tests Should exactly match given object","location":null,"status":"passed","title":"Should exactly match given object"},{"ancestorTitles":["makeSpaceship() tests"],"failureMessages":[],"fullName":"makeSpaceship() tests Should return an object","location":null,"status":"passed","title":"Should return an object"},{"ancestorTitles":["makeSpaceship() tests"],"failureMessages":[],"fullName":"makeSpaceship() tests Should create an object with the provided arguments as values","location":null,"status":"passed","title":"Should create an object with the provided arguments as values"},{"ancestorTitles":["setUserName() tests"],"failureMessages":[],"fullName":"setUserName() tests Should return and object","location":null,"status":"passed","title":"Should return and object"},{"ancestorTitles":["setUserName() tests"],"failureMessages":[],"fullName":"setUserName() tests Shouldn't change the username if one already exists","location":null,"status":"passed","title":"Shouldn't change the username if one already exists"},{"ancestorTitles":["setUserName() tests"],"failureMessages":[],"fullName":"setUserName() tests Should change the username if none exists","location":null,"status":"passed","title":"Should change the username if none exists"},{"ancestorTitles":["splitFullNameToFirstAndLast() tests"],"failureMessages":[],"fullName":"splitFullNameToFirstAndLast() tests Should split up basic names","location":null,"status":"passed","title":"Should split up basic names"},{"ancestorTitles":["accessGivenKey() tests"],"failureMessages":[],"fullName":"accessGivenKey() tests Should access the eyeColour property","location":null,"status":"passed","title":"Should access the eyeColour property"},{"ancestorTitles":["accessGivenKey() tests"],"failureMessages":[],"fullName":"accessGivenKey() tests Should access the height property","location":null,"status":"passed","title":"Should access the height property"},{"ancestorTitles":["accessGivenKey() tests"],"failureMessages":[],"fullName":"accessGivenKey() tests Should access the name property","location":null,"status":"passed","title":"Should access the name property"},{"ancestorTitles":["accessGivenKey() tests"],"failureMessages":[],"fullName":"accessGivenKey() tests Should access the likesIceCream property","location":null,"status":"passed","title":"Should access the likesIceCream property"},{"ancestorTitles":["getUserAddress() tests"],"failureMessages":[],"fullName":"getUserAddress() tests Should be able to get the address from the user object","location":null,"status":"passed","title":"Should be able to get the address from the user object"},{"ancestorTitles":["setSafeAllergens() tests"],"failureMessages":[],"fullName":"setSafeAllergens() tests Should include all allergens as safe if none present on the object allergies array","location":null,"status":"passed","title":"Should include all allergens as safe if none present on the object allergies array"},{"ancestorTitles":["setSafeAllergens() tests"],"failureMessages":[],"fullName":"setSafeAllergens() tests Should include no allergens if all are found on the customer object","location":null,"status":"passed","title":"Should include no allergens if all are found on the customer object"},{"ancestorTitles":["setSafeAllergens() tests"],"failureMessages":[],"fullName":"setSafeAllergens() tests Should include some allergens if some are present on customer allergen list","location":null,"status":"passed","title":"Should include some allergens if some are present on customer allergen list"},{"ancestorTitles":["mergeFurniture() tests"],"failureMessages":[],"fullName":"mergeFurniture() tests Should return an object which has a combination of both keys","location":null,"status":"passed","title":"Should return an object which has a combination of both keys"},{"ancestorTitles":["mergeFurniture() tests"],"failureMessages":[],"fullName":"mergeFurniture() tests Should not modify the original object","location":null,"status":"passed","title":"Should not modify the original object"},{"ancestorTitles":["mergeFurniture() tests"],"failureMessages":[],"fullName":"mergeFurniture() tests Should return an object which has the exact key value pairs of both objects","location":null,"status":"passed","title":"Should return an object which has the exact key value pairs of both objects"}],"endTime":1662017482918,"message":"","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js6-objects\\js6.test.js","startTime":1662017476451,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Foundation level challenges","getEmployeeQuotes() tests"],"failureMessages":[],"fullName":"Foundation level challenges getEmployeeQuotes() tests Should return an array of just the quote from the data provided","location":null,"status":"passed","title":"Should return an array of just the quote from the data provided"},{"ancestorTitles":["Foundation level challenges","getTheManagers() tests"],"failureMessages":[],"fullName":"Foundation level challenges getTheManagers() tests Should return an array containing only employees where isManagement is true","location":null,"status":"passed","title":"Should return an array containing only employees where isManagement is true"},{"ancestorTitles":["Foundation level challenges","getNumberOfKeys() tests"],"failureMessages":[],"fullName":"Foundation level challenges getNumberOfKeys() tests Should return a number","location":null,"status":"passed","title":"Should return a number"},{"ancestorTitles":["Foundation level challenges","getNumberOfKeys() tests"],"failureMessages":[],"fullName":"Foundation level challenges getNumberOfKeys() tests Should accurately count the number of keys","location":null,"status":"passed","title":"Should accurately count the number of keys"},{"ancestorTitles":["Intermediate level challenges","findMostExpensiveItem() tests"],"failureMessages":[],"fullName":"Intermediate level challenges findMostExpensiveItem() tests Should return a single object","location":null,"status":"passed","title":"Should return a single object"},{"ancestorTitles":["Intermediate level challenges","findMostExpensiveItem() tests"],"failureMessages":[],"fullName":"Intermediate level challenges findMostExpensiveItem() tests Should return the most expensive item which is a hoodie","location":null,"status":"passed","title":"Should return the most expensive item which is a hoodie"},{"ancestorTitles":["Intermediate level challenges","settotalPrice() tests"],"failureMessages":[],"fullName":"Intermediate level challenges settotalPrice() tests Should return an array","location":null,"status":"passed","title":"Should return an array"},{"ancestorTitles":["Intermediate level challenges","settotalPrice() tests"],"failureMessages":[],"fullName":"Intermediate level challenges settotalPrice() tests Should not modify original array of objects","location":null,"status":"passed","title":"Should not modify original array of objects"},{"ancestorTitles":["Intermediate level challenges","settotalPrice() tests"],"failureMessages":[],"fullName":"Intermediate level challenges settotalPrice() tests Should add a totalPrice key to each object","location":null,"status":"passed","title":"Should add a totalPrice key to each object"},{"ancestorTitles":["Intermediate level challenges","settotalPrice() tests"],"failureMessages":[],"fullName":"Intermediate level challenges settotalPrice() tests Should accurately total each shopping item","location":null,"status":"passed","title":"Should accurately total each shopping item"},{"ancestorTitles":["Intermediate level challenges","totalShoppingBasket() tests"],"failureMessages":[],"fullName":"Intermediate level challenges totalShoppingBasket() tests Should return a number","location":null,"status":"passed","title":"Should return a number"},{"ancestorTitles":["Intermediate level challenges","totalShoppingBasket() tests"],"failureMessages":[],"fullName":"Intermediate level challenges totalShoppingBasket() tests Should accurately total all objects","location":null,"status":"passed","title":"Should accurately total all objects"},{"ancestorTitles":["getImportantKeys() tests"],"failureMessages":[],"fullName":"getImportantKeys() tests Should not modify the original array","location":null,"status":"passed","title":"Should not modify the original array"},{"ancestorTitles":["getImportantKeys() tests"],"failureMessages":[],"fullName":"getImportantKeys() tests Should remove unneeded keys from the objects","location":null,"status":"passed","title":"Should remove unneeded keys from the objects"},{"ancestorTitles":["getImportantKeys() tests"],"failureMessages":[],"fullName":"getImportantKeys() tests Should alter every item in the array","location":null,"status":"passed","title":"Should alter every item in the array"},{"ancestorTitles":["setImportantKeys() tests"],"failureMessages":[],"fullName":"setImportantKeys() tests Should not modify the original array","location":null,"status":"passed","title":"Should not modify the original array"},{"ancestorTitles":["setImportantKeys() tests"],"failureMessages":[],"fullName":"setImportantKeys() tests Should add missing keys","location":null,"status":"passed","title":"Should add missing keys"},{"ancestorTitles":["setImportantKeys() tests"],"failureMessages":[],"fullName":"setImportantKeys() tests should not modify existing values","location":null,"status":"passed","title":"should not modify existing values"},{"ancestorTitles":["setImportantKeys() tests"],"failureMessages":[],"fullName":"setImportantKeys() tests Should match this exact array of objects","location":null,"status":"passed","title":"Should match this exact array of objects"},{"ancestorTitles":["cleanCocktailResponseData() tests"],"failureMessages":[],"fullName":"cleanCocktailResponseData() tests Should not mutate the original array","location":null,"status":"passed","title":"Should not mutate the original array"},{"ancestorTitles":["cleanCocktailResponseData() tests"],"failureMessages":[],"fullName":"cleanCocktailResponseData() tests Should remove old keys","location":null,"status":"passed","title":"Should remove old keys"},{"ancestorTitles":["cleanCocktailResponseData() tests"],"failureMessages":[],"fullName":"cleanCocktailResponseData() tests Should rename keys","location":null,"status":"passed","title":"Should rename keys"},{"ancestorTitles":["cleanCocktailResponseData() tests"],"failureMessages":[],"fullName":"cleanCocktailResponseData() tests Should add an array for the ingredients","location":null,"status":"passed","title":"Should add an array for the ingredients"},{"ancestorTitles":["cleanCocktailResponseData() tests"],"failureMessages":[],"fullName":"cleanCocktailResponseData() tests Should match given structure","location":null,"status":"passed","title":"Should match given structure"}],"endTime":1662017482954,"message":"","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js8-complex-data-types\\js8.test.js","startTime":1662017476451,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Testing Coordinate class"],"failureMessages":[],"fullName":"Testing Coordinate class Should be an object","location":null,"status":"passed","title":"Should be an object"},{"ancestorTitles":["Testing Coordinate class"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"xCoord\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{}\u001b[39m\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js7-classes\\js7.test.js:19:22)\n    at Object.asyncJestTest (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Testing Coordinate class Should have xCoord key","location":null,"status":"failed","title":"Should have xCoord key"},{"ancestorTitles":["Testing Coordinate class"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"yCoord\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{}\u001b[39m\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js7-classes\\js7.test.js:24:22)\n    at Object.asyncJestTest (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Testing Coordinate class Should have yCoord key","location":null,"status":"failed","title":"Should have yCoord key"},{"ancestorTitles":["Testing Coordinate class"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m5\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js7-classes\\js7.test.js:29:29)\n    at Object.asyncJestTest (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Testing Coordinate class Should have the correct value for xCoord key","location":null,"status":"failed","title":"Should have the correct value for xCoord key"},{"ancestorTitles":["Testing Coordinate class"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m10\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js7-classes\\js7.test.js:34:29)\n    at Object.asyncJestTest (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at C:\\Users\\laila\\Documents\\Nology\\js-challenges\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Testing Coordinate class Should have the correct value for yCoord key","location":null,"status":"failed","title":"Should have the correct value for yCoord key"},{"ancestorTitles":["Testing Alert class"],"failureMessages":[],"fullName":"Testing Alert class Should be an object","location":null,"status":"pending","title":"Should be an object"},{"ancestorTitles":["Testing Alert class"],"failureMessages":[],"fullName":"Testing Alert class Should have a message key","location":null,"status":"pending","title":"Should have a message key"},{"ancestorTitles":["Testing Alert class"],"failureMessages":[],"fullName":"Testing Alert class Should have a printMessage function","location":null,"status":"pending","title":"Should have a printMessage function"},{"ancestorTitles":["Testing Alert class"],"failureMessages":[],"fullName":"Testing Alert class Should return a string when the printMessage method is called","location":null,"status":"pending","title":"Should return a string when the printMessage method is called"},{"ancestorTitles":["Testing Alert class"],"failureMessages":[],"fullName":"Testing Alert class Should return a correctly formatted string when the printMessage method is called","location":null,"status":"pending","title":"Should return a correctly formatted string when the printMessage method is called"},{"ancestorTitles":["Testing Alert class"],"failureMessages":[],"fullName":"Testing Alert class Should not alter message key after method is called","location":null,"status":"pending","title":"Should not alter message key after method is called"},{"ancestorTitles":["Testing Loader class"],"failureMessages":[],"fullName":"Testing Loader class Should be an object","location":null,"status":"pending","title":"Should be an object"},{"ancestorTitles":["Testing Loader class"],"failureMessages":[],"fullName":"Testing Loader class Should have a htmlRef key","location":null,"status":"pending","title":"Should have a htmlRef key"},{"ancestorTitles":["Testing Loader class"],"failureMessages":[],"fullName":"Testing Loader class Should have a displayLoader and removeLoader methods","location":null,"status":"pending","title":"Should have a displayLoader and removeLoader methods"},{"ancestorTitles":["Testing Loader class"],"failureMessages":[],"fullName":"Testing Loader class Should add the correct html to the html reference when displayLoader() is called","location":null,"status":"pending","title":"Should add the correct html to the html reference when displayLoader() is called"},{"ancestorTitles":["Testing Loader class"],"failureMessages":[],"fullName":"Testing Loader class Should add the correct html to the html reference when displayLoader() is called multiple times","location":null,"status":"pending","title":"Should add the correct html to the html reference when displayLoader() is called multiple times"},{"ancestorTitles":["Testing Loader class"],"failureMessages":[],"fullName":"Testing Loader class Should set innerHTML of html reference to an empty string removeLoader() is called","location":null,"status":"pending","title":"Should set innerHTML of html reference to an empty string removeLoader() is called"},{"ancestorTitles":["Testing Loader class"],"failureMessages":[],"fullName":"Testing Loader class Should remove html from the html reference when displayLoader() and then removeLoader() is called","location":null,"status":"pending","title":"Should remove html from the html reference when displayLoader() and then removeLoader() is called"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should be an object","location":null,"status":"pending","title":"Should be an object"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should have a count key","location":null,"status":"pending","title":"Should have a count key"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should have correct count when initialised","location":null,"status":"pending","title":"Should have correct count when initialised"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should have a increment function","location":null,"status":"pending","title":"Should have a increment function"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should return a number when the increment method is called","location":null,"status":"pending","title":"Should return a number when the increment method is called"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should increment count by 1","location":null,"status":"pending","title":"Should increment count by 1"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should increment count by 1 100 times","location":null,"status":"pending","title":"Should increment count by 1 100 times"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should have a decrement function","location":null,"status":"pending","title":"Should have a decrement function"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should return a number when the decrement method is called","location":null,"status":"pending","title":"Should return a number when the decrement method is called"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should decrement count by 1","location":null,"status":"pending","title":"Should decrement count by 1"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should decrement count by 1 100 times","location":null,"status":"pending","title":"Should decrement count by 1 100 times"},{"ancestorTitles":["Testing Counter class"],"failureMessages":[],"fullName":"Testing Counter class Should not decrement below 0","location":null,"status":"pending","title":"Should not decrement below 0"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should be an object","location":null,"status":"pending","title":"Should be an object"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should have a engineIsRunning key","location":null,"status":"pending","title":"Should have a engineIsRunning key"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should set engineIsRunning to false by default","location":null,"status":"pending","title":"Should set engineIsRunning to false by default"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should have a startEngine function","location":null,"status":"pending","title":"Should have a startEngine function"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should return a string when the startEngine method is called","location":null,"status":"pending","title":"Should return a string when the startEngine method is called"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should return the correct string when startEngine() is called and engineIsRunning is false","location":null,"status":"pending","title":"Should return the correct string when startEngine() is called and engineIsRunning is false"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should set engineIsRunning to true after startEngine() has been called","location":null,"status":"pending","title":"Should set engineIsRunning to true after startEngine() has been called"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should return the correct string when startEngine() is called and engineIsRunning is true","location":null,"status":"pending","title":"Should return the correct string when startEngine() is called and engineIsRunning is true"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should have a stopEngine function","location":null,"status":"pending","title":"Should have a stopEngine function"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should return a string when the stopEngine method is called","location":null,"status":"pending","title":"Should return a string when the stopEngine method is called"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should return the correct string when stopEngine() is called and engineIsRunning is false","location":null,"status":"pending","title":"Should return the correct string when stopEngine() is called and engineIsRunning is false"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should return the correct string when stopEngine() is called and engineIsRunning is true","location":null,"status":"pending","title":"Should return the correct string when stopEngine() is called and engineIsRunning is true"},{"ancestorTitles":["Testing Engine class"],"failureMessages":[],"fullName":"Testing Engine class Should set engineIsRunning to false after startEngine() and stopEngine() have been called","location":null,"status":"pending","title":"Should set engineIsRunning to false after startEngine() and stopEngine() have been called"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should be an object","location":null,"status":"pending","title":"Should be an object"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should have htmlRef, title and message keys","location":null,"status":"pending","title":"Should have htmlRef, title and message keys"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should have correct values assigned to the keys","location":null,"status":"pending","title":"Should have correct values assigned to the keys"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should have renderHtml and toggleModalfunctions","location":null,"status":"pending","title":"Should have renderHtml and toggleModalfunctions"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should update the innerHTML of the htmlRefernce after renderHtml() has been called","location":null,"status":"pending","title":"Should update the innerHTML of the htmlRefernce after renderHtml() has been called"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should update the innerHTML of the htmlRefernce dynamically after renderHtml() has been called","location":null,"status":"pending","title":"Should update the innerHTML of the htmlRefernce dynamically after renderHtml() has been called"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should update the classList of the htmlRefernce - remove hide","location":null,"status":"pending","title":"Should update the classList of the htmlRefernce - remove hide"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should update the classList of the htmlRefernce - add hide","location":null,"status":"pending","title":"Should update the classList of the htmlRefernce - add hide"},{"ancestorTitles":["Testing Modal class"],"failureMessages":[],"fullName":"Testing Modal class Should update the classList with the string of hide","location":null,"status":"pending","title":"Should update the classList with the string of hide"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should be an object","location":null,"status":"pending","title":"Should be an object"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should have a _shelfId and a _booksOnShelf key","location":null,"status":"pending","title":"Should have a _shelfId and a _booksOnShelf key"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should set _booksOnShelf to [] by default","location":null,"status":"pending","title":"Should set _booksOnShelf to [] by default"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should have the getters and setters","location":null,"status":"pending","title":"Should have the getters and setters"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should return the _booksOnShelf written as a getter","location":null,"status":"pending","title":"Should return the _booksOnShelf written as a getter"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should update the _booksOnShelf written as a setter","location":null,"status":"pending","title":"Should update the _booksOnShelf written as a setter"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should return the latestBook written as a getter","location":null,"status":"pending","title":"Should return the latestBook written as a getter"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should update using a setter and return the latestBook written as a getter","location":null,"status":"pending","title":"Should update using a setter and return the latestBook written as a getter"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should Error if latestBook is attempted to be assigned","location":null,"status":"pending","title":"Should Error if latestBook is attempted to be assigned"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should add a new book to the bookshelf written as a setter","location":null,"status":"pending","title":"Should add a new book to the bookshelf written as a setter"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should handle multiple books being added to the shelf","location":null,"status":"pending","title":"Should handle multiple books being added to the shelf"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should match last item when multiple books have been added","location":null,"status":"pending","title":"Should match last item when multiple books have been added"},{"ancestorTitles":["Testing BookShelf class"],"failureMessages":[],"fullName":"Testing BookShelf class Should add a new book to the END of bookshelf written as a setter","location":null,"status":"pending","title":"Should add a new book to the END of bookshelf written as a setter"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be an object","location":null,"status":"pending","title":"Should be an object"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should have a name and email key","location":null,"status":"pending","title":"Should have a name and email key"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should have the correct name and email value","location":null,"status":"pending","title":"Should have the correct name and email value"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should have a private _balance key","location":null,"status":"pending","title":"Should have a private _balance key"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should have the correct value on the _balance key","location":null,"status":"pending","title":"Should have the correct value on the _balance key"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should set _balance key to 0 by default","location":null,"status":"pending","title":"Should set _balance key to 0 by default"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should have the balance getter","location":null,"status":"pending","title":"Should have the balance getter"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should return the _balance written as a getter","location":null,"status":"pending","title":"Should return the _balance written as a getter"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should return a new _balance written as a getter","location":null,"status":"pending","title":"Should return a new _balance written as a getter"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should Error if balance is attempted to be assigned","location":null,"status":"pending","title":"Should Error if balance is attempted to be assigned"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should have a deposit method","location":null,"status":"pending","title":"Should have a deposit method"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be able to make a valid deposit (number) should recieve the updated balance when deposit() is called","location":null,"status":"pending","title":"Should be able to make a valid deposit (number) should recieve the updated balance when deposit() is called"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be able to make a valid deposit ('number') should recieve the updated balance when deposit() is called","location":null,"status":"pending","title":"Should be able to make a valid deposit ('number') should recieve the updated balance when deposit() is called"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should NOT be able to make a INVALID deposit should recieve formatted string when deposit() is called","location":null,"status":"pending","title":"Should NOT be able to make a INVALID deposit should recieve formatted string when deposit() is called"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be able to make a valid deposit (number) and check the balance afterwards","location":null,"status":"pending","title":"Should be able to make a valid deposit (number) and check the balance afterwards"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be able to make multiple deposits and check the balance afterwards","location":null,"status":"pending","title":"Should be able to make multiple deposits and check the balance afterwards"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should have a withdraw method","location":null,"status":"pending","title":"Should have a withdraw method"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be able to make a valid withdrawal (number) should recieve the updated balance when withdraw() is called","location":null,"status":"pending","title":"Should be able to make a valid withdrawal (number) should recieve the updated balance when withdraw() is called"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be able to make a valid withdrawal ('number') should recieve the updated balance when withdraw() is called","location":null,"status":"pending","title":"Should be able to make a valid withdrawal ('number') should recieve the updated balance when withdraw() is called"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be able to make a valid withdraw (number) and check the balance afterwards","location":null,"status":"pending","title":"Should be able to make a valid withdraw (number) and check the balance afterwards"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should NOT be able to make a INVALID withdrawal should recieve formatted string","location":null,"status":"pending","title":"Should NOT be able to make a INVALID withdrawal should recieve formatted string"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should NOT be able to make withdraw more then the current balance","location":null,"status":"pending","title":"Should NOT be able to make withdraw more then the current balance"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should NOT change the balance after INVALID withdrawals","location":null,"status":"pending","title":"Should NOT change the balance after INVALID withdrawals"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should NOT go below zero","location":null,"status":"pending","title":"Should NOT go below zero"},{"ancestorTitles":["Testing BankAccount class"],"failureMessages":[],"fullName":"Testing BankAccount class Should be able to make multiple withdrawals and check the balance afterwards","location":null,"status":"pending","title":"Should be able to make multiple withdrawals and check the balance afterwards"}],"endTime":1662017483071,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTesting Coordinate class › Should have xCoord key\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"xCoord\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m  it(\u001b[32m\"Should have xCoord key\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 19 | \u001b[39m    expect(coordOne)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"xCoord\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m    expect(coordTwo)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"xCoord\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js7-classes/js7.test.js\u001b[39m\u001b[0m\u001b[2m:19:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTesting Coordinate class › Should have yCoord key\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"yCoord\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m  it(\u001b[32m\"Should have yCoord key\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 24 | \u001b[39m    expect(coordOne)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"yCoord\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m    expect(coordTwo)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"yCoord\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js7-classes/js7.test.js\u001b[39m\u001b[0m\u001b[2m:24:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTesting Coordinate class › Should have the correct value for xCoord key\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m5\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m  it(\u001b[32m\"Should have the correct value for xCoord key\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 29 | \u001b[39m    expect(coordOne\u001b[33m.\u001b[39mxCoord)\u001b[33m.\u001b[39mtoBe(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    expect(coordTwo\u001b[33m.\u001b[39mxCoord)\u001b[33m.\u001b[39mtoBe(\u001b[35m45\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js7-classes/js7.test.js\u001b[39m\u001b[0m\u001b[2m:29:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTesting Coordinate class › Should have the correct value for yCoord key\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m10\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m  it(\u001b[32m\"Should have the correct value for yCoord key\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 34 | \u001b[39m    expect(coordOne\u001b[33m.\u001b[39myCoord)\u001b[33m.\u001b[39mtoBe(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m    expect(coordTwo\u001b[33m.\u001b[39myCoord)\u001b[33m.\u001b[39mtoBe(\u001b[35m17\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js7-classes/js7.test.js\u001b[39m\u001b[0m\u001b[2m:34:29)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js7-classes\\js7.test.js","startTime":1662017476456,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["getData() tests"],"failureMessages":[],"fullName":"getData() tests Fetch should have been called once","location":null,"status":"passed","title":"Fetch should have been called once"},{"ancestorTitles":["getData() tests"],"failureMessages":[],"fullName":"getData() tests Should return the data","location":null,"status":"passed","title":"Should return the data"},{"ancestorTitles":["getNames() tests"],"failureMessages":[],"fullName":"getNames() tests Fetch should have been called once","location":null,"status":"passed","title":"Fetch should have been called once"},{"ancestorTitles":["getNames() tests"],"failureMessages":[],"fullName":"getNames() tests Should return an array of names","location":null,"status":"passed","title":"Should return an array of names"},{"ancestorTitles":["getEmployedPeople() tests"],"failureMessages":[],"fullName":"getEmployedPeople() tests Fetch should have been called once","location":null,"status":"passed","title":"Fetch should have been called once"},{"ancestorTitles":["getEmployedPeople() tests"],"failureMessages":[],"fullName":"getEmployedPeople() tests Should return an array of employed people objects","location":null,"status":"passed","title":"Should return an array of employed people objects"},{"ancestorTitles":["findPersonWithId() tests"],"failureMessages":[],"fullName":"findPersonWithId() tests Should return a single object","location":null,"status":"passed","title":"Should return a single object"},{"ancestorTitles":["findPersonWithId() tests"],"failureMessages":[],"fullName":"findPersonWithId() tests Should return a person with the id of 001","location":null,"status":"passed","title":"Should return a person with the id of 001"},{"ancestorTitles":["findPersonWithId() tests"],"failureMessages":[],"fullName":"findPersonWithId() tests Should return a person with the id of 005","location":null,"status":"passed","title":"Should return a person with the id of 005"},{"ancestorTitles":["findPersonWithId() tests"],"failureMessages":[],"fullName":"findPersonWithId() tests Should return a message of 'Person not found' when no person has a matching ID","location":null,"status":"passed","title":"Should return a message of 'Person not found' when no person has a matching ID"},{"ancestorTitles":["getPeopleWithMatchingInterests() tests"],"failureMessages":[],"fullName":"getPeopleWithMatchingInterests() tests Should return an array if interests are found","location":null,"status":"passed","title":"Should return an array if interests are found"},{"ancestorTitles":["getPeopleWithMatchingInterests() tests"],"failureMessages":[],"fullName":"getPeopleWithMatchingInterests() tests Should return all people with a matching interest (swimming)","location":null,"status":"passed","title":"Should return all people with a matching interest (swimming)"},{"ancestorTitles":["getPeopleWithMatchingInterests() tests"],"failureMessages":[],"fullName":"getPeopleWithMatchingInterests() tests Should return all people with a matching interest (mma)","location":null,"status":"passed","title":"Should return all people with a matching interest (mma)"},{"ancestorTitles":["getPeopleWithMatchingInterests() tests"],"failureMessages":[],"fullName":"getPeopleWithMatchingInterests() tests Should return 'No people with interest found' if no matching interests on people","location":null,"status":"passed","title":"Should return 'No people with interest found' if no matching interests on people"},{"ancestorTitles":["setDescription() tests"],"failureMessages":["TypeError: Cannot read properties of undefined (reading '0')\n    at map (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\challenge.js:139:118)\n    at Array.map (<anonymous>)\n    at setDescriptions (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\challenge.js:134:19)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\js9.test.js:267:36)"],"fullName":"setDescription() tests Should not modify original data","location":null,"status":"failed","title":"Should not modify original data"},{"ancestorTitles":["setDescription() tests"],"failureMessages":["TypeError: Cannot read properties of undefined (reading '0')\n    at map (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\challenge.js:139:118)\n    at Array.map (<anonymous>)\n    at setDescriptions (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\challenge.js:134:19)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\js9.test.js:272:36)"],"fullName":"setDescription() tests Should add a description key","location":null,"status":"failed","title":"Should add a description key"},{"ancestorTitles":["setDescription() tests"],"failureMessages":["TypeError: Cannot read properties of undefined (reading '0')\n    at map (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\challenge.js:139:118)\n    at Array.map (<anonymous>)\n    at setDescriptions (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\challenge.js:134:19)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\js9.test.js:277:35)"],"fullName":"setDescription() tests Should add accurate description to each object","location":null,"status":"failed","title":"Should add accurate description to each object"},{"ancestorTitles":["setInterestDetails() tests"],"failureMessages":[],"fullName":"setInterestDetails() tests should call fetch twice","location":null,"status":"passed","title":"should call fetch twice"},{"ancestorTitles":["setInterestDetails() tests"],"failureMessages":[],"fullName":"setInterestDetails() tests Should not modify original data","location":null,"status":"passed","title":"Should not modify original data"},{"ancestorTitles":["setInterestDetails() tests"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\js9.test.js:487:67)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"setInterestDetails() tests Should turn the interests key into an array of objects","location":null,"status":"failed","title":"Should turn the interests key into an array of objects"},{"ancestorTitles":["setInterestDetails() tests"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoStrictEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 182\u001b[39m\n\u001b[31m+ Received  +  28\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"age\": 47,\u001b[39m\n\u001b[32m-     \"height\": 170,\u001b[39m\n\u001b[32m-     \"id\": \"001\",\u001b[39m\n\u001b[32m-     \"interests\": Array [\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 800,\u001b[39m\n\u001b[32m-         \"interest\": \"swimming\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 500,\u001b[39m\n\u001b[32m-         \"interest\": \"reading\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 30000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 100,\u001b[39m\n\u001b[32m-         \"interest\": \"juggling\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 1000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[31m+   Array [\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[32m-     \"isEmployed\": true,\u001b[39m\n\u001b[32m-     \"name\": \"Peter\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"age\": 16,\u001b[39m\n\u001b[32m-     \"height\": 130,\u001b[39m\n\u001b[32m-     \"id\": \"002\",\u001b[39m\n\u001b[32m-     \"interests\": Array [\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 200,\u001b[39m\n\u001b[32m-         \"interest\": \"writing\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 15000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 1000,\u001b[39m\n\u001b[32m-         \"interest\": \"hiking\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 25000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 200,\u001b[39m\n\u001b[32m-         \"interest\": \"watching TV\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 450000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[31m+   Array [\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[32m-     \"isEmployed\": false,\u001b[39m\n\u001b[32m-     \"name\": \"Georgia\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"age\": 78,\u001b[39m\n\u001b[32m-     \"height\": 140,\u001b[39m\n\u001b[32m-     \"id\": \"003\",\u001b[39m\n\u001b[32m-     \"interests\": Array [\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n\u001b[32m-         \"interest\": \"knitting\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 10000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n\u001b[32m-         \"interest\": \"baking\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 1000,\u001b[39m\n\u001b[32m-         \"interest\": \"MMA\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[31m+   Array [\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[32m-     \"isEmployed\": false,\u001b[39m\n\u001b[32m-     \"name\": \"Joanna\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"age\": 32,\u001b[39m\n\u001b[32m-     \"height\": 190,\u001b[39m\n\u001b[32m-     \"id\": \"004\",\u001b[39m\n\u001b[32m-     \"interests\": Array [\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 10000,\u001b[39m\n\u001b[32m-         \"interest\": \"shooting\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 5000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 1000,\u001b[39m\n\u001b[32m-         \"interest\": \"MMA\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 200,\u001b[39m\n\u001b[32m-         \"interest\": \"writing\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 15000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[31m+   Array [\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[32m-     \"isEmployed\": true,\u001b[39m\n\u001b[32m-     \"name\": \"Buzz\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"age\": 22,\u001b[39m\n\u001b[32m-     \"height\": 160,\u001b[39m\n\u001b[32m-     \"id\": \"005\",\u001b[39m\n\u001b[32m-     \"interests\": Array [\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 800,\u001b[39m\n\u001b[32m-         \"interest\": \"swimming\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 200,\u001b[39m\n\u001b[32m-         \"interest\": \"watching TV\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 450000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n\u001b[32m-         \"interest\": \"knitting\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 10000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[31m+   Array [\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[32m-     \"isEmployed\": true,\u001b[39m\n\u001b[32m-     \"name\": \"Travis\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"age\": 27,\u001b[39m\n\u001b[32m-     \"height\": 160,\u001b[39m\n\u001b[32m-     \"id\": \"006\",\u001b[39m\n\u001b[32m-     \"interests\": Array [\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n\u001b[32m-         \"interest\": \"baking\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 1000,\u001b[39m\n\u001b[32m-         \"interest\": \"hiking\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 25000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 10000,\u001b[39m\n\u001b[32m-         \"interest\": \"shooting\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 5000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[31m+   Array [\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[32m-     \"isEmployed\": false,\u001b[39m\n\u001b[32m-     \"name\": \"Paula\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"age\": 50,\u001b[39m\n\u001b[32m-     \"height\": 150,\u001b[39m\n\u001b[32m-     \"id\": \"007\",\u001b[39m\n\u001b[32m-     \"interests\": Array [\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 500,\u001b[39m\n\u001b[32m-         \"interest\": \"reading\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 30000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 100,\u001b[39m\n\u001b[32m-         \"interest\": \"juggling\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 1000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[32m-       Object {\u001b[39m\n\u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n\u001b[32m-         \"interest\": \"knitting\",\u001b[39m\n\u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n\u001b[32m-         \"sizeOfCommunity\": 10000000,\u001b[39m\n\u001b[32m-       },\u001b[39m\n\u001b[31m+   Array [\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[31m+     undefined,\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[32m-     \"isEmployed\": false,\u001b[39m\n\u001b[32m-     \"name\": \"J\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\js9.test.js:496:39)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"setInterestDetails() tests Should match the exact dummy array of objects","location":null,"status":"failed","title":"Should match the exact dummy array of objects"}],"endTime":1662017483087,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msetDescription() tests › Should not modify original data\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '0')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 137 | \u001b[39m      \u001b[33m?\u001b[39m (employmentStatus \u001b[33m=\u001b[39m \u001b[32m\"currently employed\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 138 | \u001b[39m      \u001b[33m:\u001b[39m (employmentStatus \u001b[33m=\u001b[39m \u001b[32m\"not currently employed\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 139 | \u001b[39m    entry\u001b[33m.\u001b[39mdescription \u001b[33m=\u001b[39m \u001b[32m`My name is ${entry.name}, I am ${entry.age} years old and ${entry.height}cm tall. I enjoy ${entry.interest[0]}, ${entry.interest[1]} and ${entry.interest[2]}. I am ${employmentStatus}`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 140 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 141 | \u001b[39m}\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat map (\u001b[22m\u001b[2msrc/js9-apis-and-fetch/challenge.js\u001b[2m:139:118)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat setDescriptions (\u001b[22m\u001b[2msrc/js9-apis-and-fetch/challenge.js\u001b[2m:134:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js9-apis-and-fetch/js9.test.js\u001b[39m\u001b[0m\u001b[2m:267:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msetDescription() tests › Should add a description key\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '0')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 137 | \u001b[39m      \u001b[33m?\u001b[39m (employmentStatus \u001b[33m=\u001b[39m \u001b[32m\"currently employed\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 138 | \u001b[39m      \u001b[33m:\u001b[39m (employmentStatus \u001b[33m=\u001b[39m \u001b[32m\"not currently employed\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 139 | \u001b[39m    entry\u001b[33m.\u001b[39mdescription \u001b[33m=\u001b[39m \u001b[32m`My name is ${entry.name}, I am ${entry.age} years old and ${entry.height}cm tall. I enjoy ${entry.interest[0]}, ${entry.interest[1]} and ${entry.interest[2]}. I am ${employmentStatus}`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 140 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 141 | \u001b[39m}\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat map (\u001b[22m\u001b[2msrc/js9-apis-and-fetch/challenge.js\u001b[2m:139:118)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat setDescriptions (\u001b[22m\u001b[2msrc/js9-apis-and-fetch/challenge.js\u001b[2m:134:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js9-apis-and-fetch/js9.test.js\u001b[39m\u001b[0m\u001b[2m:272:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msetDescription() tests › Should add accurate description to each object\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '0')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 137 | \u001b[39m      \u001b[33m?\u001b[39m (employmentStatus \u001b[33m=\u001b[39m \u001b[32m\"currently employed\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 138 | \u001b[39m      \u001b[33m:\u001b[39m (employmentStatus \u001b[33m=\u001b[39m \u001b[32m\"not currently employed\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 139 | \u001b[39m    entry\u001b[33m.\u001b[39mdescription \u001b[33m=\u001b[39m \u001b[32m`My name is ${entry.name}, I am ${entry.age} years old and ${entry.height}cm tall. I enjoy ${entry.interest[0]}, ${entry.interest[1]} and ${entry.interest[2]}. I am ${employmentStatus}`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 140 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 141 | \u001b[39m}\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat map (\u001b[22m\u001b[2msrc/js9-apis-and-fetch/challenge.js\u001b[2m:139:118)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat setDescriptions (\u001b[22m\u001b[2msrc/js9-apis-and-fetch/challenge.js\u001b[2m:134:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js9-apis-and-fetch/js9.test.js\u001b[39m\u001b[0m\u001b[2m:277:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msetInterestDetails() tests › Should turn the interests key into an array of objects\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 485 | \u001b[39m  it(\u001b[32m\"Should turn the interests key into an array of objects\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 486 | \u001b[39m    \u001b[36mconst\u001b[39m detailedInterestsResponse \u001b[33m=\u001b[39m await setInterestDetails(\u001b[32m\"./mockPersonApi.json\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"./mockInterestsApi.json\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 487 | \u001b[39m    expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(detailedInterestsResponse[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39minterests))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 488 | \u001b[39m    expect(detailedInterestsResponse[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39minterests[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"costPerAnnum\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 489 | \u001b[39m    expect(detailedInterestsResponse[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39minterests[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"interest\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 490 | \u001b[39m    expect(detailedInterestsResponse[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39minterests[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"isDoneInGroups\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js9-apis-and-fetch/js9.test.js\u001b[39m\u001b[0m\u001b[2m:487:67)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msetInterestDetails() tests › Should match the exact dummy array of objects\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoStrictEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 182\u001b[39m\n    \u001b[31m+ Received  +  28\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"age\": 47,\u001b[39m\n    \u001b[32m-     \"height\": 170,\u001b[39m\n    \u001b[32m-     \"id\": \"001\",\u001b[39m\n    \u001b[32m-     \"interests\": Array [\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 800,\u001b[39m\n    \u001b[32m-         \"interest\": \"swimming\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 500,\u001b[39m\n    \u001b[32m-         \"interest\": \"reading\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 30000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 100,\u001b[39m\n    \u001b[32m-         \"interest\": \"juggling\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 1000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[31m+   Array [\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[32m-     \"isEmployed\": true,\u001b[39m\n    \u001b[32m-     \"name\": \"Peter\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"age\": 16,\u001b[39m\n    \u001b[32m-     \"height\": 130,\u001b[39m\n    \u001b[32m-     \"id\": \"002\",\u001b[39m\n    \u001b[32m-     \"interests\": Array [\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 200,\u001b[39m\n    \u001b[32m-         \"interest\": \"writing\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 15000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 1000,\u001b[39m\n    \u001b[32m-         \"interest\": \"hiking\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 25000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 200,\u001b[39m\n    \u001b[32m-         \"interest\": \"watching TV\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 450000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[31m+   Array [\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[32m-     \"isEmployed\": false,\u001b[39m\n    \u001b[32m-     \"name\": \"Georgia\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"age\": 78,\u001b[39m\n    \u001b[32m-     \"height\": 140,\u001b[39m\n    \u001b[32m-     \"id\": \"003\",\u001b[39m\n    \u001b[32m-     \"interests\": Array [\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n    \u001b[32m-         \"interest\": \"knitting\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 10000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n    \u001b[32m-         \"interest\": \"baking\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 1000,\u001b[39m\n    \u001b[32m-         \"interest\": \"MMA\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[31m+   Array [\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[32m-     \"isEmployed\": false,\u001b[39m\n    \u001b[32m-     \"name\": \"Joanna\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"age\": 32,\u001b[39m\n    \u001b[32m-     \"height\": 190,\u001b[39m\n    \u001b[32m-     \"id\": \"004\",\u001b[39m\n    \u001b[32m-     \"interests\": Array [\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 10000,\u001b[39m\n    \u001b[32m-         \"interest\": \"shooting\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 5000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 1000,\u001b[39m\n    \u001b[32m-         \"interest\": \"MMA\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 200,\u001b[39m\n    \u001b[32m-         \"interest\": \"writing\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 15000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[31m+   Array [\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[32m-     \"isEmployed\": true,\u001b[39m\n    \u001b[32m-     \"name\": \"Buzz\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"age\": 22,\u001b[39m\n    \u001b[32m-     \"height\": 160,\u001b[39m\n    \u001b[32m-     \"id\": \"005\",\u001b[39m\n    \u001b[32m-     \"interests\": Array [\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 800,\u001b[39m\n    \u001b[32m-         \"interest\": \"swimming\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 200,\u001b[39m\n    \u001b[32m-         \"interest\": \"watching TV\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 450000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n    \u001b[32m-         \"interest\": \"knitting\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 10000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[31m+   Array [\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[32m-     \"isEmployed\": true,\u001b[39m\n    \u001b[32m-     \"name\": \"Travis\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"age\": 27,\u001b[39m\n    \u001b[32m-     \"height\": 160,\u001b[39m\n    \u001b[32m-     \"id\": \"006\",\u001b[39m\n    \u001b[32m-     \"interests\": Array [\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n    \u001b[32m-         \"interest\": \"baking\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 20000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 1000,\u001b[39m\n    \u001b[32m-         \"interest\": \"hiking\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 25000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 10000,\u001b[39m\n    \u001b[32m-         \"interest\": \"shooting\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": true,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 5000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[31m+   Array [\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[32m-     \"isEmployed\": false,\u001b[39m\n    \u001b[32m-     \"name\": \"Paula\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"age\": 50,\u001b[39m\n    \u001b[32m-     \"height\": 150,\u001b[39m\n    \u001b[32m-     \"id\": \"007\",\u001b[39m\n    \u001b[32m-     \"interests\": Array [\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 500,\u001b[39m\n    \u001b[32m-         \"interest\": \"reading\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 30000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 100,\u001b[39m\n    \u001b[32m-         \"interest\": \"juggling\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 1000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[32m-       Object {\u001b[39m\n    \u001b[32m-         \"costPerAnnum\": 400,\u001b[39m\n    \u001b[32m-         \"interest\": \"knitting\",\u001b[39m\n    \u001b[32m-         \"isDoneInGroups\": false,\u001b[39m\n    \u001b[32m-         \"sizeOfCommunity\": 10000000,\u001b[39m\n    \u001b[32m-       },\u001b[39m\n    \u001b[31m+   Array [\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[31m+     undefined,\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[32m-     \"isEmployed\": false,\u001b[39m\n    \u001b[32m-     \"name\": \"J\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 494 | \u001b[39m  it(\u001b[32m\"Should match the exact dummy array of objects\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 495 | \u001b[39m    \u001b[36mconst\u001b[39m detailedInterestsResponse \u001b[33m=\u001b[39m await setInterestDetails(\u001b[32m\"./mockPersonApi.json\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"./mockInterestsApi.json\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 496 | \u001b[39m    expect(detailedInterestsResponse)\u001b[33m.\u001b[39mtoStrictEqual(dummyDetailedInterests)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 497 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 498 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 499 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/js9-apis-and-fetch/js9.test.js\u001b[39m\u001b[0m\u001b[2m:496:39)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js9-apis-and-fetch\\js9.test.js","startTime":1662017476452,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1662017483221,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/en/ecmascript-modules\u001b[24m for how to enable it.\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js2-functions-intro\\js2.test.js: Unexpected token (30:0)\n\n    \u001b[0m \u001b[90m 28 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 29 | \u001b[39mdescribe(\u001b[32m\"findSmallestNumber() tests\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mUpdated\u001b[39m upstream\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 31 | \u001b[39m    it(\u001b[32m\"Should have a return\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 32 | \u001b[39m        expect(findSmallestNumber(\u001b[35m100\u001b[39m\u001b[33m,\u001b[39m \u001b[35m200\u001b[39m))\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 33 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:60:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:55:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:39:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:139:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1159:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:565:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:545:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:529:17)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:349:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:314:23)\u001b[22m\n","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js2-functions-intro\\js2.test.js","startTime":1662017483221,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1662017483221,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/en/ecmascript-modules\u001b[24m for how to enable it.\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js3-arrays-and-for-loops\\js3.test.js: Unexpected token (47:0)\n\n    \u001b[0m \u001b[90m 45 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 46 | \u001b[39mdescribe(\u001b[32m\"Testing getFirstAndLastItems()\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mUpdated\u001b[39m upstream\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 48 | \u001b[39m    it(\u001b[32m\"Should be defined\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 49 | \u001b[39m        expect(getFirstAndLastItems(coaches))\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 50 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:60:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:55:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:39:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:139:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1159:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:565:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:545:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:529:17)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:349:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:314:23)\u001b[22m\n","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js3-arrays-and-for-loops\\js3.test.js","startTime":1662017483221,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1662017483221,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/en/ecmascript-modules\u001b[24m for how to enable it.\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js4-array-iterators\\js4.test.js: Unexpected token (65:0)\n\n    \u001b[0m \u001b[90m 63 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 64 | \u001b[39mdescribe(\u001b[32m\"Testing createPercentageList()\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mUpdated\u001b[39m upstream\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 66 | \u001b[39m    it(\u001b[32m\"Should return an array\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 67 | \u001b[39m        expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(createPercentageList(toBePercentages)))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 68 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:60:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:55:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:39:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:139:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1159:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:565:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:545:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:529:17)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:349:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:314:23)\u001b[22m\n","name":"C:\\Users\\laila\\Documents\\Nology\\js-challenges\\src\\js4-array-iterators\\js4.test.js","startTime":1662017483221,"status":"failed","summary":""}],"wasInterrupted":false}